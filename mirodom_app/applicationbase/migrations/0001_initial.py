# Generated by Django 3.2.11 on 2022-02-22 10:18

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=50, verbose_name='Причина штрафа')),
                ('amount', models.FloatField(verbose_name='Сумма штрафа')),
            ],
            options={
                'verbose_name': 'Штраф',
                'verbose_name_plural': 'Штрафы',
            },
        ),
        migrations.CreateModel(
            name='Masters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=30, verbose_name='ФИО')),
                ('tel', models.CharField(max_length=15, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Мастер',
                'verbose_name_plural': 'Мастера',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YKP7', models.FloatField(blank=True, null=True, verbose_name='УКП-7')),
                ('YKP12', models.FloatField(blank=True, null=True, verbose_name='УКП-12')),
                ('RF', models.FloatField(blank=True, null=True, verbose_name='RF')),
                ('TM', models.FloatField(blank=True, null=True, verbose_name='TM')),
                ('MD', models.FloatField(blank=True, null=True, verbose_name='MD')),
                ('door_closer', models.FloatField(blank=True, null=True, verbose_name='Доводчик')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applicationbase.masters', verbose_name='Мастер')),
            ],
            options={
                'verbose_name': 'Учет склада',
                'verbose_name_plural': 'Склад',
            },
        ),
        migrations.CreateModel(
            name='Appliactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50, verbose_name='Город')),
                ('address', models.CharField(max_length=20, verbose_name='Адрес')),
                ('flat', models.CharField(blank=True, max_length=10, null=True, verbose_name='Квартира')),
                ('full_name_client', models.CharField(blank=True, max_length=30, null=True, verbose_name='ФИО Клиента')),
                ('reason_for_calling', models.TextField(blank=True, null=True, verbose_name='Причина вызова')),
                ('treaty', models.BooleanField(default=False, verbose_name='Договор')),
                ('door_closer', models.BooleanField(default=False, verbose_name='Замена доводчика')),
                ('img_door_closer', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото доводчика')),
                ('monetary', models.BooleanField(default=False, verbose_name='Денежная заявка')),
                ('sum', models.FloatField(blank=True, null=True, verbose_name='Общая сумма')),
                ('premium', models.FloatField(blank=True, null=True, verbose_name='Премия')),
                ('fine', models.BooleanField(default=False, verbose_name='Штраф')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('published', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата подачи заявки')),
                ('closing_date', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('a', 'В работе'), ('b', 'Нужна сварка'), ('c', 'Выполнена')], default='a', max_length=20, verbose_name='Статус заявки')),
                ('choose_fine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applicationbase.fine', verbose_name='Причины штрафа')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applicationbase.masters', verbose_name='Мастер')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_activated', models.BooleanField(db_index=True, default=True, verbose_name='Прошел активацию?')),
                ('send_messages', models.BooleanField(default=True, verbose_name='Присылать оповещения о новых комментариях?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
